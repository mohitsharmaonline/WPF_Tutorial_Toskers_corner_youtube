    <!-- Relay / Delegate Command: it is kind of a universal command.
    
    what we are going to make:
    We are going to have a string collection in our view model and
    our combobox will display all the available messages and we will be
    able to show those messages in a message box or log it in a console.
    and then we will have two special messages where one each can only 
    be submitted by either the message or console but not both.
    -->
    
    <Window x:Class="RelayCommand.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:RelayCommand"
        mc:Ignorable="d"
        Title="Learning Relay Commands" Height="350" Width="525">
    <Grid>
        <StackPanel Width="250">
            <TextBlock>Messages</TextBlock>
            <!-- Populate combobox with collection MyMessages.-->
            <!-- Demonstration of usefulness of commands-->
            <!-- We can change Combobox with ListView and nothing
            much changes, all functionalities works like
            charm as before. So by using commands you can change
            things around without affecting others at all.-->
            <ListView Height="200"  x:Name="ComboMessages"
                       ItemsSource="{Binding MyMessages}"/>
            <Button Command="{Binding MessageBoxCommand}"
                    CommandParameter=
                    "{Binding ElementName=ComboMessages, 
                Path=SelectedItem}">
                Message Box
            </Button>
            <Button 
                Command="{Binding ConsoleLogCommand}"
                CommandParameter="{Binding
                ElementName=ComboMessages, Path=SelectedItem}">
                Console Log
            </Button>
        </StackPanel>
    </Grid>
</Window>
